### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


"""Board"""
type Board {
  createdAt: DateTime!
  date: Date
  isDeleted: Boolean!
  jobs: [Job!]
  json: JSON
  time: Time
  title: String!
  updatedAt: DateTime

  """UUID of the user"""
  uuid: ID!
}

input BoardInputData {
  title: String!
}

input BoardInputWhere {
  isDeleted: Boolean
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the
`date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO
8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""Job"""
type Job {
  board: Board
  createdAt: DateTime!
  isDeleted: Boolean!
  status: JobStatus!
  title: String!
  updatedAt: DateTime
  uuid: ID!
}

input JobInputData {
  boardUUID: ID!
  title: String!
}

input JobInputWhere {
  isDeleted: Boolean
}

enum JobStatus {
  ACTIVE
  ARCHIVED
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

type Mutation {
  archiveBoard(uuid: ID!): Board!
  createBoard(data: BoardInputData!): Board!
  createJob(data: JobInputData!): Job!
  updateBoard(data: BoardInputData!, uuid: ID!): Board!
}

type Query {
  board(
    """The id of the board"""
    uuid: String!
  ): Board!
  boards(where: BoardInputWhere): [Board!]!
  getJobs(where: JobInputWhere): [Job!]!
  hello(name: String): String!
}

"""
A time string at UTC, such as 10:15:30Z, compliant with the `full-time` format
outlined in section 5.6 of the RFC 3339profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Time

"""The `Upload` scalar type represents a file upload."""
scalar Upload

type User {
  email: String!
  username: String!
  uuid: ID!
}
